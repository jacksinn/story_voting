# This YML file configure the Security Scanning tooling for PHP code
name: PHP Composer Security Scanning

on:
  push:
    branches: [ gh-security-scanning ]
  pull_request:
    branches: [ gh-security-scanning ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP Action
      # You may pin to the exact commit or the version.
      # uses: shivammathur/setup-php@1686147b24d176ca416781e2af1576dc3ed05ef0
      uses: shivammathur/setup-php@2.9.0
      with:
        # Setup PHP version.
        php-version: '7.3'

    - name: Validate composer.json and composer.lock
      run: composer validate -vvv

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --no-progress

    - name: Run Psalm own own way
      # run php scan and pass results to reporting if exit code is 0 or 2
      run: php ./vendor/bin/psalm --threads=$(nproc) --report="results.sarif" || ([[ $? = 2 ]] && exit 0)

    - name: Upload Security Analysis results to GitHub
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif



    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Psalm – Static Analysis for PHP
    #   # You may pin to the exact commit or the version.
    #   # uses: psalm/psalm-github-actions@2e545d38ff4387b370449e2673088cc8dc40cf1d
    #   uses: docker://vimeo/psalm-github-actions
    #   with:
    #     # Whether or not to use Psalm’s security analysis
    #     security_analysis: true
    #     # File for Psalm’s output
    #     report_file: results.sarif
    #     # Whether or not Composer installs dev packages
    #     ssh_key: ${{ secrets.COMMON_HEADER_COMPOSER_AUTH_PRIVATE_KEY }}
    #     ssh_key_pub: ${{ secrets.COMMON_HEADER_COMPOSER_AUTH_PUBLIC_KEY }}
    # - name: Upload Security Analysis results to GitHub
    #   uses: github/codeql-action/upload-sarif@v1
    #   with:
    #     sarif_file: results.sarif
    #
    #
